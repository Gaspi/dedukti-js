

#REQUIRE sudoku/sudoku;

super_easy_sudoku :=
  c (l 4 3 5   2 6 9   7 8 1)
    (l 6 8 2   5 7 1   4 9 3)
    (l 1 9 7   8 3 4   5 6 2)

    (l 8 2 X   1 X X   X 4 X)
    (l 3 7 4   6 8 2   9 1 5)
    (l 9 5 1   7 4 3   X 2 8)

    (l 5 1 9   3 2 6   8 7 4)
    (l X 4 X   X 5 7   1 3 6)
    (l 7 6 3   4 1 8   2 5 9);

//
//c (l 4 3 5   2 6 9   7 8 1 )
//  (l 6 8 2   5 7 1   4 9 3 )
//  (l 1 9 7   8 3 4   5 6 2 )
//  
//  (l 8 2 6   1 9 5   3 4 7 )
//  (l 3 7 4   6 8 2   9 1 5 )
//  (l 9 5 1   7 4 3   6 2 8 )
//  
//  (l 5 1 9   3 2 6   8 7 4 )
//  (l 2 4 8   9 5 7   1 3 6 )
//  (l 7 6 3   4 1 8   2 5 9 )

#EVAL solve_sudo super_easy_sudoku;

//#EVAL set 1 1 1 super_easy_sudoku;
// #EVAL exists' ((i' : ind) => eq (get i' 3 super_easy_sudoku ) 1) 1;
