// Computational test

Nat : Type;
Z : Nat;
S : Nat -> Nat;

plus : Nat -> Nat -> Nat;
: plus     Z y --> y;
: plus (S x) y --> plus x (S y);

mult : Nat -> Nat -> Nat;
: mult     Z * --> Z;
: mult (S x) y --> plus y (mult x y);

fact : Nat -> Nat;
: fact Z     --> S Z;
: fact (S x) --> mult (S x) (fact x);

one   : Nat := (S Z    );
two   : Nat := (S one  );
three : Nat := (S two  );
four  : Nat := (S three);
five  : Nat := (S four );
six   : Nat := (S five );
seven : Nat := (S six  );

#CHECK
  plus (fact seven) (fact six)
  ==
  plus (fact six) (fact seven);

#CHECK
  plus (fact seven) (fact six)
  !=
  plus one (plus (fact six) (fact seven));
